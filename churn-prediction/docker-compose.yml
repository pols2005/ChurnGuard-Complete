# ChurnGuard Full Stack Development Environment
# Epic 1 - CG-001: Docker Containerization
version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    volumes:
      # Development hot reload - mount source for live updates
      - ./src:/app/src:ro
      - ./public:/app/public:ro
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5001
    depends_on:
      - backend
    networks:
      - churnguard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Flask API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    volumes:
      # Development hot reload
      - ./server:/app:ro
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - GROQ_API_KEY=${GROQ_API_KEY}
      - PORT=5000
    networks:
      - churnguard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/customers"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  churnguard-network:
    driver: bridge
    name: churnguard-dev-network

volumes: {}